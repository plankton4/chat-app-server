// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: common.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//===========================================================================
//ENUMS
//=============================================================================
type Gender int32

const (
	Gender_UnknownGender Gender = 0
	Gender_Male          Gender = 1
	Gender_Female        Gender = 2
	Gender_Other         Gender = 3
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "UnknownGender",
		1: "Male",
		2: "Female",
		3: "Other",
	}
	Gender_value = map[string]int32{
		"UnknownGender": 0,
		"Male":          1,
		"Female":        2,
		"Other":         3,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type ChatMessageType int32

const (
	ChatMessageType_UnknownType ChatMessageType = 0
	ChatMessageType_Text        ChatMessageType = 1
	ChatMessageType_Image       ChatMessageType = 2
	ChatMessageType_GIF         ChatMessageType = 3
)

// Enum value maps for ChatMessageType.
var (
	ChatMessageType_name = map[int32]string{
		0: "UnknownType",
		1: "Text",
		2: "Image",
		3: "GIF",
	}
	ChatMessageType_value = map[string]int32{
		"UnknownType": 0,
		"Text":        1,
		"Image":       2,
		"GIF":         3,
	}
)

func (x ChatMessageType) Enum() *ChatMessageType {
	p := new(ChatMessageType)
	*p = x
	return p
}

func (x ChatMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (ChatMessageType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x ChatMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatMessageType.Descriptor instead.
func (ChatMessageType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

type UserDataField int32

const (
	UserDataField_FieldUserID   UserDataField = 0
	UserDataField_FieldName     UserDataField = 1
	UserDataField_FieldAge      UserDataField = 2
	UserDataField_FieldGender   UserDataField = 3
	UserDataField_FieldCityName UserDataField = 4
)

// Enum value maps for UserDataField.
var (
	UserDataField_name = map[int32]string{
		0: "FieldUserID",
		1: "FieldName",
		2: "FieldAge",
		3: "FieldGender",
		4: "FieldCityName",
	}
	UserDataField_value = map[string]int32{
		"FieldUserID":   0,
		"FieldName":     1,
		"FieldAge":      2,
		"FieldGender":   3,
		"FieldCityName": 4,
	}
)

func (x UserDataField) Enum() *UserDataField {
	p := new(UserDataField)
	*p = x
	return p
}

func (x UserDataField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserDataField) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (UserDataField) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x UserDataField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserDataField.Descriptor instead.
func (UserDataField) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

type PrivateUserDataField int32

const (
	// WORK
	PrivateUserDataField_FieldPhoneNumber PrivateUserDataField = 0 // заглушка чтоб прото собрать
)

// Enum value maps for PrivateUserDataField.
var (
	PrivateUserDataField_name = map[int32]string{
		0: "FieldPhoneNumber",
	}
	PrivateUserDataField_value = map[string]int32{
		"FieldPhoneNumber": 0,
	}
)

func (x PrivateUserDataField) Enum() *PrivateUserDataField {
	p := new(PrivateUserDataField)
	*p = x
	return p
}

func (x PrivateUserDataField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrivateUserDataField) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[3].Descriptor()
}

func (PrivateUserDataField) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[3]
}

func (x PrivateUserDataField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrivateUserDataField.Descriptor instead.
func (PrivateUserDataField) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

type ReturnReason int32

const (
	ReturnReason_AuthenticationNeeded ReturnReason = 0
)

// Enum value maps for ReturnReason.
var (
	ReturnReason_name = map[int32]string{
		0: "AuthenticationNeeded",
	}
	ReturnReason_value = map[string]int32{
		"AuthenticationNeeded": 0,
	}
)

func (x ReturnReason) Enum() *ReturnReason {
	p := new(ReturnReason)
	*p = x
	return p
}

func (x ReturnReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReturnReason) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[4].Descriptor()
}

func (ReturnReason) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[4]
}

func (x ReturnReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReturnReason.Descriptor instead.
func (ReturnReason) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

type PBMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowID  uint32  `protobuf:"varint,1,opt,name=RowID,proto3" json:"RowID,omitempty"`
	ErrID  *uint32 `protobuf:"varint,2,opt,name=ErrID,proto3,oneof" json:"ErrID,omitempty"`
	ErrStr *string `protobuf:"bytes,3,opt,name=ErrStr,proto3,oneof" json:"ErrStr,omitempty"`
	// Types that are assignable to InternalMessage:
	//	*PBMessage_MessAuthReq
	//	*PBMessage_MessAuthAnswer
	//	*PBMessage_MessGetUserDataReq
	//	*PBMessage_MessGetUserDataAnswer
	//	*PBMessage_MessGetMasterUserDataReq
	//	*PBMessage_MessGetMasterUserDataResp
	//	*PBMessage_MessSendChatMessageReq
	//	*PBMessage_MessEditChatMessageReq
	//	*PBMessage_MessNewChatMessageEvent
	//	*PBMessage_MessChatMessageChangedEvent
	//	*PBMessage_MessDeleteChatMessageReq
	//	*PBMessage_MessChatMessageDeletedEvent
	//	*PBMessage_MessGetAllChatMessagesReq
	//	*PBMessage_MessGetAllChatMessagesAnswer
	//	*PBMessage_MessSubscribeToPushReq
	//	*PBMessage_MessGetChatListReq
	//	*PBMessage_MessGetChatListResp
	//	*PBMessage_MessGetUnreadInfoReq
	//	*PBMessage_MessGetUnreadInfoResp
	//	*PBMessage_MessReturnedMessageEvent
	//	*PBMessage_MessStandartAnswer
	InternalMessage isPBMessage_InternalMessage `protobuf_oneof:"InternalMessage"`
}

func (x *PBMessage) Reset() {
	*x = PBMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBMessage) ProtoMessage() {}

func (x *PBMessage) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBMessage.ProtoReflect.Descriptor instead.
func (*PBMessage) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *PBMessage) GetRowID() uint32 {
	if x != nil {
		return x.RowID
	}
	return 0
}

func (x *PBMessage) GetErrID() uint32 {
	if x != nil && x.ErrID != nil {
		return *x.ErrID
	}
	return 0
}

func (x *PBMessage) GetErrStr() string {
	if x != nil && x.ErrStr != nil {
		return *x.ErrStr
	}
	return ""
}

func (m *PBMessage) GetInternalMessage() isPBMessage_InternalMessage {
	if m != nil {
		return m.InternalMessage
	}
	return nil
}

func (x *PBMessage) GetMessAuthReq() *AuthenticationReq {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessAuthReq); ok {
		return x.MessAuthReq
	}
	return nil
}

func (x *PBMessage) GetMessAuthAnswer() *AuthenticationAnswer {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessAuthAnswer); ok {
		return x.MessAuthAnswer
	}
	return nil
}

func (x *PBMessage) GetMessGetUserDataReq() *GetUserDataReq {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessGetUserDataReq); ok {
		return x.MessGetUserDataReq
	}
	return nil
}

func (x *PBMessage) GetMessGetUserDataAnswer() *GetUserDataAnswer {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessGetUserDataAnswer); ok {
		return x.MessGetUserDataAnswer
	}
	return nil
}

func (x *PBMessage) GetMessGetMasterUserDataReq() *GetMasterUserDataReq {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessGetMasterUserDataReq); ok {
		return x.MessGetMasterUserDataReq
	}
	return nil
}

func (x *PBMessage) GetMessGetMasterUserDataResp() *GetMasterUserDataResp {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessGetMasterUserDataResp); ok {
		return x.MessGetMasterUserDataResp
	}
	return nil
}

func (x *PBMessage) GetMessSendChatMessageReq() *SendChatMessageReq {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessSendChatMessageReq); ok {
		return x.MessSendChatMessageReq
	}
	return nil
}

func (x *PBMessage) GetMessEditChatMessageReq() *EditChatMessageReq {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessEditChatMessageReq); ok {
		return x.MessEditChatMessageReq
	}
	return nil
}

func (x *PBMessage) GetMessNewChatMessageEvent() *NewChatMessageEvent {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessNewChatMessageEvent); ok {
		return x.MessNewChatMessageEvent
	}
	return nil
}

func (x *PBMessage) GetMessChatMessageChangedEvent() *ChatMessageChangedEvent {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessChatMessageChangedEvent); ok {
		return x.MessChatMessageChangedEvent
	}
	return nil
}

func (x *PBMessage) GetMessDeleteChatMessageReq() *DeleteChatMessageReq {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessDeleteChatMessageReq); ok {
		return x.MessDeleteChatMessageReq
	}
	return nil
}

func (x *PBMessage) GetMessChatMessageDeletedEvent() *ChatMessageDeletedEvent {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessChatMessageDeletedEvent); ok {
		return x.MessChatMessageDeletedEvent
	}
	return nil
}

func (x *PBMessage) GetMessGetAllChatMessagesReq() *GetAllChatMessagesReq {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessGetAllChatMessagesReq); ok {
		return x.MessGetAllChatMessagesReq
	}
	return nil
}

func (x *PBMessage) GetMessGetAllChatMessagesAnswer() *GetAllChatMessagesAnswer {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessGetAllChatMessagesAnswer); ok {
		return x.MessGetAllChatMessagesAnswer
	}
	return nil
}

func (x *PBMessage) GetMessSubscribeToPushReq() *SubscribeToPushReq {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessSubscribeToPushReq); ok {
		return x.MessSubscribeToPushReq
	}
	return nil
}

func (x *PBMessage) GetMessGetChatListReq() *GetChatListReq {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessGetChatListReq); ok {
		return x.MessGetChatListReq
	}
	return nil
}

func (x *PBMessage) GetMessGetChatListResp() *GetChatListResp {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessGetChatListResp); ok {
		return x.MessGetChatListResp
	}
	return nil
}

func (x *PBMessage) GetMessGetUnreadInfoReq() *GetUnreadInfoReq {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessGetUnreadInfoReq); ok {
		return x.MessGetUnreadInfoReq
	}
	return nil
}

func (x *PBMessage) GetMessGetUnreadInfoResp() *GetUnreadInfoResp {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessGetUnreadInfoResp); ok {
		return x.MessGetUnreadInfoResp
	}
	return nil
}

func (x *PBMessage) GetMessReturnedMessageEvent() *ReturnedMessageEvent {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessReturnedMessageEvent); ok {
		return x.MessReturnedMessageEvent
	}
	return nil
}

func (x *PBMessage) GetMessStandartAnswer() *StandartAnswer {
	if x, ok := x.GetInternalMessage().(*PBMessage_MessStandartAnswer); ok {
		return x.MessStandartAnswer
	}
	return nil
}

type isPBMessage_InternalMessage interface {
	isPBMessage_InternalMessage()
}

type PBMessage_MessAuthReq struct {
	// Auth
	MessAuthReq *AuthenticationReq `protobuf:"bytes,20,opt,name=MessAuthReq,proto3,oneof"`
}

type PBMessage_MessAuthAnswer struct {
	MessAuthAnswer *AuthenticationAnswer `protobuf:"bytes,21,opt,name=MessAuthAnswer,proto3,oneof"`
}

type PBMessage_MessGetUserDataReq struct {
	// User data
	MessGetUserDataReq *GetUserDataReq `protobuf:"bytes,50,opt,name=MessGetUserDataReq,proto3,oneof"`
}

type PBMessage_MessGetUserDataAnswer struct {
	MessGetUserDataAnswer *GetUserDataAnswer `protobuf:"bytes,51,opt,name=MessGetUserDataAnswer,proto3,oneof"`
}

type PBMessage_MessGetMasterUserDataReq struct {
	MessGetMasterUserDataReq *GetMasterUserDataReq `protobuf:"bytes,52,opt,name=MessGetMasterUserDataReq,proto3,oneof"`
}

type PBMessage_MessGetMasterUserDataResp struct {
	MessGetMasterUserDataResp *GetMasterUserDataResp `protobuf:"bytes,53,opt,name=MessGetMasterUserDataResp,proto3,oneof"`
}

type PBMessage_MessSendChatMessageReq struct {
	// Messages
	MessSendChatMessageReq *SendChatMessageReq `protobuf:"bytes,100,opt,name=MessSendChatMessageReq,proto3,oneof"`
}

type PBMessage_MessEditChatMessageReq struct {
	MessEditChatMessageReq *EditChatMessageReq `protobuf:"bytes,101,opt,name=MessEditChatMessageReq,proto3,oneof"`
}

type PBMessage_MessNewChatMessageEvent struct {
	MessNewChatMessageEvent *NewChatMessageEvent `protobuf:"bytes,102,opt,name=MessNewChatMessageEvent,proto3,oneof"`
}

type PBMessage_MessChatMessageChangedEvent struct {
	MessChatMessageChangedEvent *ChatMessageChangedEvent `protobuf:"bytes,103,opt,name=MessChatMessageChangedEvent,proto3,oneof"`
}

type PBMessage_MessDeleteChatMessageReq struct {
	MessDeleteChatMessageReq *DeleteChatMessageReq `protobuf:"bytes,104,opt,name=MessDeleteChatMessageReq,proto3,oneof"`
}

type PBMessage_MessChatMessageDeletedEvent struct {
	MessChatMessageDeletedEvent *ChatMessageDeletedEvent `protobuf:"bytes,105,opt,name=MessChatMessageDeletedEvent,proto3,oneof"`
}

type PBMessage_MessGetAllChatMessagesReq struct {
	MessGetAllChatMessagesReq *GetAllChatMessagesReq `protobuf:"bytes,200,opt,name=MessGetAllChatMessagesReq,proto3,oneof"`
}

type PBMessage_MessGetAllChatMessagesAnswer struct {
	MessGetAllChatMessagesAnswer *GetAllChatMessagesAnswer `protobuf:"bytes,201,opt,name=MessGetAllChatMessagesAnswer,proto3,oneof"`
}

type PBMessage_MessSubscribeToPushReq struct {
	// Push
	MessSubscribeToPushReq *SubscribeToPushReq `protobuf:"bytes,250,opt,name=MessSubscribeToPushReq,proto3,oneof"`
}

type PBMessage_MessGetChatListReq struct {
	// Chats
	MessGetChatListReq *GetChatListReq `protobuf:"bytes,300,opt,name=MessGetChatListReq,proto3,oneof"`
}

type PBMessage_MessGetChatListResp struct {
	MessGetChatListResp *GetChatListResp `protobuf:"bytes,301,opt,name=MessGetChatListResp,proto3,oneof"`
}

type PBMessage_MessGetUnreadInfoReq struct {
	MessGetUnreadInfoReq *GetUnreadInfoReq `protobuf:"bytes,302,opt,name=MessGetUnreadInfoReq,proto3,oneof"`
}

type PBMessage_MessGetUnreadInfoResp struct {
	MessGetUnreadInfoResp *GetUnreadInfoResp `protobuf:"bytes,303,opt,name=MessGetUnreadInfoResp,proto3,oneof"`
}

type PBMessage_MessReturnedMessageEvent struct {
	// Other events
	MessReturnedMessageEvent *ReturnedMessageEvent `protobuf:"bytes,1999,opt,name=MessReturnedMessageEvent,proto3,oneof"`
}

type PBMessage_MessStandartAnswer struct {
	MessStandartAnswer *StandartAnswer `protobuf:"bytes,2000,opt,name=MessStandartAnswer,proto3,oneof"`
}

func (*PBMessage_MessAuthReq) isPBMessage_InternalMessage() {}

func (*PBMessage_MessAuthAnswer) isPBMessage_InternalMessage() {}

func (*PBMessage_MessGetUserDataReq) isPBMessage_InternalMessage() {}

func (*PBMessage_MessGetUserDataAnswer) isPBMessage_InternalMessage() {}

func (*PBMessage_MessGetMasterUserDataReq) isPBMessage_InternalMessage() {}

func (*PBMessage_MessGetMasterUserDataResp) isPBMessage_InternalMessage() {}

func (*PBMessage_MessSendChatMessageReq) isPBMessage_InternalMessage() {}

func (*PBMessage_MessEditChatMessageReq) isPBMessage_InternalMessage() {}

func (*PBMessage_MessNewChatMessageEvent) isPBMessage_InternalMessage() {}

func (*PBMessage_MessChatMessageChangedEvent) isPBMessage_InternalMessage() {}

func (*PBMessage_MessDeleteChatMessageReq) isPBMessage_InternalMessage() {}

func (*PBMessage_MessChatMessageDeletedEvent) isPBMessage_InternalMessage() {}

func (*PBMessage_MessGetAllChatMessagesReq) isPBMessage_InternalMessage() {}

func (*PBMessage_MessGetAllChatMessagesAnswer) isPBMessage_InternalMessage() {}

func (*PBMessage_MessSubscribeToPushReq) isPBMessage_InternalMessage() {}

func (*PBMessage_MessGetChatListReq) isPBMessage_InternalMessage() {}

func (*PBMessage_MessGetChatListResp) isPBMessage_InternalMessage() {}

func (*PBMessage_MessGetUnreadInfoReq) isPBMessage_InternalMessage() {}

func (*PBMessage_MessGetUnreadInfoResp) isPBMessage_InternalMessage() {}

func (*PBMessage_MessReturnedMessageEvent) isPBMessage_InternalMessage() {}

func (*PBMessage_MessStandartAnswer) isPBMessage_InternalMessage() {}

//===========================================================================
//DATA
//=============================================================================
type UserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint32  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Name     *string `protobuf:"bytes,2,opt,name=Name,proto3,oneof" json:"Name,omitempty"`
	Age      *uint32 `protobuf:"varint,3,opt,name=Age,proto3,oneof" json:"Age,omitempty"`
	Gender   *Gender `protobuf:"varint,4,opt,name=Gender,proto3,enum=PBCommon.Gender,oneof" json:"Gender,omitempty"`
	CityName *string `protobuf:"bytes,5,opt,name=CityName,proto3,oneof" json:"CityName,omitempty"`
}

func (x *UserData) Reset() {
	*x = UserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserData) ProtoMessage() {}

func (x *UserData) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserData.ProtoReflect.Descriptor instead.
func (*UserData) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *UserData) GetUserID() uint32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserData) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UserData) GetAge() uint32 {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return 0
}

func (x *UserData) GetGender() Gender {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return Gender_UnknownGender
}

func (x *UserData) GetCityName() string {
	if x != nil && x.CityName != nil {
		return *x.CityName
	}
	return ""
}

type PrivateUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PrivateUserData) Reset() {
	*x = PrivateUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateUserData) ProtoMessage() {}

func (x *PrivateUserData) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateUserData.ProtoReflect.Descriptor instead.
func (*PrivateUserData) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

type ChatMessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID      string           `protobuf:"bytes,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Type           ChatMessageType  `protobuf:"varint,2,opt,name=Type,proto3,enum=PBCommon.ChatMessageType" json:"Type,omitempty"`
	FromUserID     uint32           `protobuf:"varint,3,opt,name=FromUserID,proto3" json:"FromUserID,omitempty"`
	Time           *uint32          `protobuf:"varint,4,opt,name=Time,proto3,oneof" json:"Time,omitempty"`
	ToChatID       *uint32          `protobuf:"varint,5,opt,name=ToChatID,proto3,oneof" json:"ToChatID,omitempty"`
	ToUserID       *uint32          `protobuf:"varint,6,opt,name=ToUserID,proto3,oneof" json:"ToUserID,omitempty"`
	Text           *string          `protobuf:"bytes,7,opt,name=Text,proto3,oneof" json:"Text,omitempty"`
	IsEdited       *bool            `protobuf:"varint,8,opt,name=IsEdited,proto3,oneof" json:"IsEdited,omitempty"`
	ImageURL       *string          `protobuf:"bytes,9,opt,name=ImageURL,proto3,oneof" json:"ImageURL,omitempty"`
	AspectRatio    *float32         `protobuf:"fixed32,10,opt,name=AspectRatio,proto3,oneof" json:"AspectRatio,omitempty"`
	RepliedMessage *ChatMessageData `protobuf:"bytes,11,opt,name=RepliedMessage,proto3,oneof" json:"RepliedMessage,omitempty"`
}

func (x *ChatMessageData) Reset() {
	*x = ChatMessageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageData) ProtoMessage() {}

func (x *ChatMessageData) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageData.ProtoReflect.Descriptor instead.
func (*ChatMessageData) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *ChatMessageData) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *ChatMessageData) GetType() ChatMessageType {
	if x != nil {
		return x.Type
	}
	return ChatMessageType_UnknownType
}

func (x *ChatMessageData) GetFromUserID() uint32 {
	if x != nil {
		return x.FromUserID
	}
	return 0
}

func (x *ChatMessageData) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *ChatMessageData) GetToChatID() uint32 {
	if x != nil && x.ToChatID != nil {
		return *x.ToChatID
	}
	return 0
}

func (x *ChatMessageData) GetToUserID() uint32 {
	if x != nil && x.ToUserID != nil {
		return *x.ToUserID
	}
	return 0
}

func (x *ChatMessageData) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *ChatMessageData) GetIsEdited() bool {
	if x != nil && x.IsEdited != nil {
		return *x.IsEdited
	}
	return false
}

func (x *ChatMessageData) GetImageURL() string {
	if x != nil && x.ImageURL != nil {
		return *x.ImageURL
	}
	return ""
}

func (x *ChatMessageData) GetAspectRatio() float32 {
	if x != nil && x.AspectRatio != nil {
		return *x.AspectRatio
	}
	return 0
}

func (x *ChatMessageData) GetRepliedMessage() *ChatMessageData {
	if x != nil {
		return x.RepliedMessage
	}
	return nil
}

type ChatData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatID  uint32  `protobuf:"varint,1,opt,name=ChatID,proto3" json:"ChatID,omitempty"`
	Title   string  `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	IconURL *string `protobuf:"bytes,3,opt,name=IconURL,proto3,oneof" json:"IconURL,omitempty"`
}

func (x *ChatData) Reset() {
	*x = ChatData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatData) ProtoMessage() {}

func (x *ChatData) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatData.ProtoReflect.Descriptor instead.
func (*ChatData) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *ChatData) GetChatID() uint32 {
	if x != nil {
		return x.ChatID
	}
	return 0
}

func (x *ChatData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChatData) GetIconURL() string {
	if x != nil && x.IconURL != nil {
		return *x.IconURL
	}
	return ""
}

type UnreadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID            *uint32 `protobuf:"varint,1,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	ChatID            *uint32 `protobuf:"varint,2,opt,name=ChatID,proto3,oneof" json:"ChatID,omitempty"`
	UnreadCount       *uint32 `protobuf:"varint,3,opt,name=UnreadCount,proto3,oneof" json:"UnreadCount,omitempty"`
	LastSeenMessageID *string `protobuf:"bytes,4,opt,name=LastSeenMessageID,proto3,oneof" json:"LastSeenMessageID,omitempty"`
}

func (x *UnreadInfo) Reset() {
	*x = UnreadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnreadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnreadInfo) ProtoMessage() {}

func (x *UnreadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnreadInfo.ProtoReflect.Descriptor instead.
func (*UnreadInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *UnreadInfo) GetUserID() uint32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UnreadInfo) GetChatID() uint32 {
	if x != nil && x.ChatID != nil {
		return *x.ChatID
	}
	return 0
}

func (x *UnreadInfo) GetUnreadCount() uint32 {
	if x != nil && x.UnreadCount != nil {
		return *x.UnreadCount
	}
	return 0
}

func (x *UnreadInfo) GetLastSeenMessageID() string {
	if x != nil && x.LastSeenMessageID != nil {
		return *x.LastSeenMessageID
	}
	return ""
}

//===========================================================================
//REQUEST
//=============================================================================
type SendChatMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           ChatMessageType  `protobuf:"varint,1,opt,name=Type,proto3,enum=PBCommon.ChatMessageType" json:"Type,omitempty"`
	FromUserID     uint32           `protobuf:"varint,2,opt,name=FromUserID,proto3" json:"FromUserID,omitempty"`
	ToChatID       *uint32          `protobuf:"varint,3,opt,name=ToChatID,proto3,oneof" json:"ToChatID,omitempty"`
	ToUserID       *uint32          `protobuf:"varint,4,opt,name=ToUserID,proto3,oneof" json:"ToUserID,omitempty"`
	Text           *string          `protobuf:"bytes,5,opt,name=Text,proto3,oneof" json:"Text,omitempty"`
	ImageURL       *string          `protobuf:"bytes,6,opt,name=ImageURL,proto3,oneof" json:"ImageURL,omitempty"`
	AspectRatio    *float32         `protobuf:"fixed32,7,opt,name=AspectRatio,proto3,oneof" json:"AspectRatio,omitempty"`
	RepliedMessage *ChatMessageData `protobuf:"bytes,8,opt,name=RepliedMessage,proto3,oneof" json:"RepliedMessage,omitempty"`
}

func (x *SendChatMessageReq) Reset() {
	*x = SendChatMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatMessageReq) ProtoMessage() {}

func (x *SendChatMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatMessageReq.ProtoReflect.Descriptor instead.
func (*SendChatMessageReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *SendChatMessageReq) GetType() ChatMessageType {
	if x != nil {
		return x.Type
	}
	return ChatMessageType_UnknownType
}

func (x *SendChatMessageReq) GetFromUserID() uint32 {
	if x != nil {
		return x.FromUserID
	}
	return 0
}

func (x *SendChatMessageReq) GetToChatID() uint32 {
	if x != nil && x.ToChatID != nil {
		return *x.ToChatID
	}
	return 0
}

func (x *SendChatMessageReq) GetToUserID() uint32 {
	if x != nil && x.ToUserID != nil {
		return *x.ToUserID
	}
	return 0
}

func (x *SendChatMessageReq) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *SendChatMessageReq) GetImageURL() string {
	if x != nil && x.ImageURL != nil {
		return *x.ImageURL
	}
	return ""
}

func (x *SendChatMessageReq) GetAspectRatio() float32 {
	if x != nil && x.AspectRatio != nil {
		return *x.AspectRatio
	}
	return 0
}

func (x *SendChatMessageReq) GetRepliedMessage() *ChatMessageData {
	if x != nil {
		return x.RepliedMessage
	}
	return nil
}

type EditChatMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginMessage *ChatMessageData `protobuf:"bytes,1,opt,name=OriginMessage,proto3" json:"OriginMessage,omitempty"`
	NewText       *string          `protobuf:"bytes,2,opt,name=NewText,proto3,oneof" json:"NewText,omitempty"`
}

func (x *EditChatMessageReq) Reset() {
	*x = EditChatMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditChatMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditChatMessageReq) ProtoMessage() {}

func (x *EditChatMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditChatMessageReq.ProtoReflect.Descriptor instead.
func (*EditChatMessageReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *EditChatMessageReq) GetOriginMessage() *ChatMessageData {
	if x != nil {
		return x.OriginMessage
	}
	return nil
}

func (x *EditChatMessageReq) GetNewText() string {
	if x != nil && x.NewText != nil {
		return *x.NewText
	}
	return ""
}

type DeleteChatMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID  string  `protobuf:"bytes,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	FromUserID uint32  `protobuf:"varint,2,opt,name=FromUserID,proto3" json:"FromUserID,omitempty"`
	ToChatID   *uint32 `protobuf:"varint,3,opt,name=ToChatID,proto3,oneof" json:"ToChatID,omitempty"`
	ToUserID   *uint32 `protobuf:"varint,4,opt,name=ToUserID,proto3,oneof" json:"ToUserID,omitempty"`
}

func (x *DeleteChatMessageReq) Reset() {
	*x = DeleteChatMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatMessageReq) ProtoMessage() {}

func (x *DeleteChatMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatMessageReq.ProtoReflect.Descriptor instead.
func (*DeleteChatMessageReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteChatMessageReq) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *DeleteChatMessageReq) GetFromUserID() uint32 {
	if x != nil {
		return x.FromUserID
	}
	return 0
}

func (x *DeleteChatMessageReq) GetToChatID() uint32 {
	if x != nil && x.ToChatID != nil {
		return *x.ToChatID
	}
	return 0
}

func (x *DeleteChatMessageReq) GetToUserID() uint32 {
	if x != nil && x.ToUserID != nil {
		return *x.ToUserID
	}
	return 0
}

type SubscribeToPushReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *SubscribeToPushReq) Reset() {
	*x = SubscribeToPushReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToPushReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToPushReq) ProtoMessage() {}

func (x *SubscribeToPushReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToPushReq.ProtoReflect.Descriptor instead.
func (*SubscribeToPushReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

func (x *SubscribeToPushReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// GetAllChatMessages
type GetAllChatMessagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatID *uint32 `protobuf:"varint,1,opt,name=ChatID,proto3,oneof" json:"ChatID,omitempty"`
	UserID *uint32 `protobuf:"varint,2,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
}

func (x *GetAllChatMessagesReq) Reset() {
	*x = GetAllChatMessagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllChatMessagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllChatMessagesReq) ProtoMessage() {}

func (x *GetAllChatMessagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllChatMessagesReq.ProtoReflect.Descriptor instead.
func (*GetAllChatMessagesReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

func (x *GetAllChatMessagesReq) GetChatID() uint32 {
	if x != nil && x.ChatID != nil {
		return *x.ChatID
	}
	return 0
}

func (x *GetAllChatMessagesReq) GetUserID() uint32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

type GetAllChatMessagesAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatID   *uint32            `protobuf:"varint,1,opt,name=ChatID,proto3,oneof" json:"ChatID,omitempty"`
	UserID   *uint32            `protobuf:"varint,2,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	Messages []*ChatMessageData `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *GetAllChatMessagesAnswer) Reset() {
	*x = GetAllChatMessagesAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllChatMessagesAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllChatMessagesAnswer) ProtoMessage() {}

func (x *GetAllChatMessagesAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllChatMessagesAnswer.ProtoReflect.Descriptor instead.
func (*GetAllChatMessagesAnswer) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

func (x *GetAllChatMessagesAnswer) GetChatID() uint32 {
	if x != nil && x.ChatID != nil {
		return *x.ChatID
	}
	return 0
}

func (x *GetAllChatMessagesAnswer) GetUserID() uint32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GetAllChatMessagesAnswer) GetMessages() []*ChatMessageData {
	if x != nil {
		return x.Messages
	}
	return nil
}

// GetChatList
type GetChatListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetChatListReq) Reset() {
	*x = GetChatListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatListReq) ProtoMessage() {}

func (x *GetChatListReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatListReq.ProtoReflect.Descriptor instead.
func (*GetChatListReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{12}
}

type GetChatListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chats []*ChatData `protobuf:"bytes,1,rep,name=chats,proto3" json:"chats,omitempty"`
}

func (x *GetChatListResp) Reset() {
	*x = GetChatListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatListResp) ProtoMessage() {}

func (x *GetChatListResp) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatListResp.ProtoReflect.Descriptor instead.
func (*GetChatListResp) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{13}
}

func (x *GetChatListResp) GetChats() []*ChatData {
	if x != nil {
		return x.Chats
	}
	return nil
}

// Authentication
type AuthenticationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     uint32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	SessionKey string `protobuf:"bytes,2,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	// аутентификация во время запуска прила, а не разворачивания
	IsFirstAuthentication bool `protobuf:"varint,3,opt,name=IsFirstAuthentication,proto3" json:"IsFirstAuthentication,omitempty"`
}

func (x *AuthenticationReq) Reset() {
	*x = AuthenticationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationReq) ProtoMessage() {}

func (x *AuthenticationReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationReq.ProtoReflect.Descriptor instead.
func (*AuthenticationReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{14}
}

func (x *AuthenticationReq) GetUserID() uint32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AuthenticationReq) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *AuthenticationReq) GetIsFirstAuthentication() bool {
	if x != nil {
		return x.IsFirstAuthentication
	}
	return false
}

type AuthenticationAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID         uint32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IsRegistration uint32 `protobuf:"varint,2,opt,name=IsRegistration,proto3" json:"IsRegistration,omitempty"`
	SessionKey     string `protobuf:"bytes,3,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
}

func (x *AuthenticationAnswer) Reset() {
	*x = AuthenticationAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationAnswer) ProtoMessage() {}

func (x *AuthenticationAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationAnswer.ProtoReflect.Descriptor instead.
func (*AuthenticationAnswer) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{15}
}

func (x *AuthenticationAnswer) GetUserID() uint32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AuthenticationAnswer) GetIsRegistration() uint32 {
	if x != nil {
		return x.IsRegistration
	}
	return 0
}

func (x *AuthenticationAnswer) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

// GetUserData
type GetUserDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users  []uint32        `protobuf:"varint,1,rep,packed,name=Users,proto3" json:"Users,omitempty"`
	Fields []UserDataField `protobuf:"varint,2,rep,packed,name=Fields,proto3,enum=PBCommon.UserDataField" json:"Fields,omitempty"`
}

func (x *GetUserDataReq) Reset() {
	*x = GetUserDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDataReq) ProtoMessage() {}

func (x *GetUserDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDataReq.ProtoReflect.Descriptor instead.
func (*GetUserDataReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserDataReq) GetUsers() []uint32 {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GetUserDataReq) GetFields() []UserDataField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type GetUserDataAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*UserData `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetUserDataAnswer) Reset() {
	*x = GetUserDataAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDataAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDataAnswer) ProtoMessage() {}

func (x *GetUserDataAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDataAnswer.ProtoReflect.Descriptor instead.
func (*GetUserDataAnswer) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserDataAnswer) GetData() []*UserData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMasterUserDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields        []UserDataField        `protobuf:"varint,1,rep,packed,name=Fields,proto3,enum=PBCommon.UserDataField" json:"Fields,omitempty"`
	PrivateFields []PrivateUserDataField `protobuf:"varint,2,rep,packed,name=PrivateFields,proto3,enum=PBCommon.PrivateUserDataField" json:"PrivateFields,omitempty"`
}

func (x *GetMasterUserDataReq) Reset() {
	*x = GetMasterUserDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMasterUserDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMasterUserDataReq) ProtoMessage() {}

func (x *GetMasterUserDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMasterUserDataReq.ProtoReflect.Descriptor instead.
func (*GetMasterUserDataReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{18}
}

func (x *GetMasterUserDataReq) GetFields() []UserDataField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GetMasterUserDataReq) GetPrivateFields() []PrivateUserDataField {
	if x != nil {
		return x.PrivateFields
	}
	return nil
}

type GetMasterUserDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        *UserData        `protobuf:"bytes,1,opt,name=Data,proto3,oneof" json:"Data,omitempty"`
	PrivateData *PrivateUserData `protobuf:"bytes,2,opt,name=PrivateData,proto3,oneof" json:"PrivateData,omitempty"`
}

func (x *GetMasterUserDataResp) Reset() {
	*x = GetMasterUserDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMasterUserDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMasterUserDataResp) ProtoMessage() {}

func (x *GetMasterUserDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMasterUserDataResp.ProtoReflect.Descriptor instead.
func (*GetMasterUserDataResp) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{19}
}

func (x *GetMasterUserDataResp) GetData() *UserData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetMasterUserDataResp) GetPrivateData() *PrivateUserData {
	if x != nil {
		return x.PrivateData
	}
	return nil
}

// Unread messages
type GetUnreadInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDs []uint32 `protobuf:"varint,1,rep,packed,name=UserIDs,proto3" json:"UserIDs,omitempty"`
	ChatIDs []uint32 `protobuf:"varint,2,rep,packed,name=ChatIDs,proto3" json:"ChatIDs,omitempty"`
}

func (x *GetUnreadInfoReq) Reset() {
	*x = GetUnreadInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnreadInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadInfoReq) ProtoMessage() {}

func (x *GetUnreadInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadInfoReq.ProtoReflect.Descriptor instead.
func (*GetUnreadInfoReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{20}
}

func (x *GetUnreadInfoReq) GetUserIDs() []uint32 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *GetUnreadInfoReq) GetChatIDs() []uint32 {
	if x != nil {
		return x.ChatIDs
	}
	return nil
}

type GetUnreadInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []*UnreadInfo `protobuf:"bytes,1,rep,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUnreadInfoResp) Reset() {
	*x = GetUnreadInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnreadInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadInfoResp) ProtoMessage() {}

func (x *GetUnreadInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadInfoResp.ProtoReflect.Descriptor instead.
func (*GetUnreadInfoResp) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{21}
}

func (x *GetUnreadInfoResp) GetInfo() []*UnreadInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

//===========================================================================
//ANSWER
//=============================================================================
type StandartAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StandartAnswer) Reset() {
	*x = StandartAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandartAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandartAnswer) ProtoMessage() {}

func (x *StandartAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandartAnswer.ProtoReflect.Descriptor instead.
func (*StandartAnswer) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{22}
}

//===========================================================================
//EVENTS
//=============================================================================
type NewChatMessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatMessage *ChatMessageData `protobuf:"bytes,1,opt,name=chatMessage,proto3" json:"chatMessage,omitempty"`
}

func (x *NewChatMessageEvent) Reset() {
	*x = NewChatMessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewChatMessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewChatMessageEvent) ProtoMessage() {}

func (x *NewChatMessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewChatMessageEvent.ProtoReflect.Descriptor instead.
func (*NewChatMessageEvent) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{23}
}

func (x *NewChatMessageEvent) GetChatMessage() *ChatMessageData {
	if x != nil {
		return x.ChatMessage
	}
	return nil
}

type ChatMessageChangedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID string          `protobuf:"bytes,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Type      ChatMessageType `protobuf:"varint,2,opt,name=Type,proto3,enum=PBCommon.ChatMessageType" json:"Type,omitempty"`
	ToChatID  *uint32         `protobuf:"varint,3,opt,name=ToChatID,proto3,oneof" json:"ToChatID,omitempty"`
	ToUserID  *uint32         `protobuf:"varint,4,opt,name=ToUserID,proto3,oneof" json:"ToUserID,omitempty"`
	NewText   *string         `protobuf:"bytes,5,opt,name=NewText,proto3,oneof" json:"NewText,omitempty"`
	IsEdited  *bool           `protobuf:"varint,6,opt,name=IsEdited,proto3,oneof" json:"IsEdited,omitempty"`
}

func (x *ChatMessageChangedEvent) Reset() {
	*x = ChatMessageChangedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageChangedEvent) ProtoMessage() {}

func (x *ChatMessageChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageChangedEvent.ProtoReflect.Descriptor instead.
func (*ChatMessageChangedEvent) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{24}
}

func (x *ChatMessageChangedEvent) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *ChatMessageChangedEvent) GetType() ChatMessageType {
	if x != nil {
		return x.Type
	}
	return ChatMessageType_UnknownType
}

func (x *ChatMessageChangedEvent) GetToChatID() uint32 {
	if x != nil && x.ToChatID != nil {
		return *x.ToChatID
	}
	return 0
}

func (x *ChatMessageChangedEvent) GetToUserID() uint32 {
	if x != nil && x.ToUserID != nil {
		return *x.ToUserID
	}
	return 0
}

func (x *ChatMessageChangedEvent) GetNewText() string {
	if x != nil && x.NewText != nil {
		return *x.NewText
	}
	return ""
}

func (x *ChatMessageChangedEvent) GetIsEdited() bool {
	if x != nil && x.IsEdited != nil {
		return *x.IsEdited
	}
	return false
}

type ChatMessageDeletedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID string  `protobuf:"bytes,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	ToChatID  *uint32 `protobuf:"varint,2,opt,name=ToChatID,proto3,oneof" json:"ToChatID,omitempty"`
	ToUserID  *uint32 `protobuf:"varint,3,opt,name=ToUserID,proto3,oneof" json:"ToUserID,omitempty"`
}

func (x *ChatMessageDeletedEvent) Reset() {
	*x = ChatMessageDeletedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageDeletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageDeletedEvent) ProtoMessage() {}

func (x *ChatMessageDeletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageDeletedEvent.ProtoReflect.Descriptor instead.
func (*ChatMessageDeletedEvent) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{25}
}

func (x *ChatMessageDeletedEvent) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *ChatMessageDeletedEvent) GetToChatID() uint32 {
	if x != nil && x.ToChatID != nil {
		return *x.ToChatID
	}
	return 0
}

func (x *ChatMessageDeletedEvent) GetToUserID() uint32 {
	if x != nil && x.ToUserID != nil {
		return *x.ToUserID
	}
	return 0
}

type ReturnedMessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReasonOfReturn  ReturnReason `protobuf:"varint,1,opt,name=ReasonOfReturn,proto3,enum=PBCommon.ReturnReason" json:"ReasonOfReturn,omitempty"`
	ReturnedMessage *PBMessage   `protobuf:"bytes,2,opt,name=ReturnedMessage,proto3" json:"ReturnedMessage,omitempty"`
}

func (x *ReturnedMessageEvent) Reset() {
	*x = ReturnedMessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnedMessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnedMessageEvent) ProtoMessage() {}

func (x *ReturnedMessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnedMessageEvent.ProtoReflect.Descriptor instead.
func (*ReturnedMessageEvent) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{26}
}

func (x *ReturnedMessageEvent) GetReasonOfReturn() ReturnReason {
	if x != nil {
		return x.ReasonOfReturn
	}
	return ReturnReason_AuthenticationNeeded
}

func (x *ReturnedMessageEvent) GetReturnedMessage() *PBMessage {
	if x != nil {
		return x.ReturnedMessage
	}
	return nil
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xbb, 0x0f, 0x0a, 0x09, 0x50, 0x42, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x77, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x52, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x53, 0x74,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x45, 0x72, 0x72, 0x53, 0x74,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x50, 0x42, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x48, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74,
	0x68, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x0e, 0x4d, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x68, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12,
	0x4a, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x50, 0x42,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x53, 0x0a, 0x15, 0x4d,
	0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x50, 0x42, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x00, 0x52, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x12, 0x5c, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x18, 0x34, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x5f,
	0x0a, 0x19, 0x4d, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x18, 0x35, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x19, 0x4d, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x56, 0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x16, 0x4d, 0x65, 0x73, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x56, 0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x45,
	0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x45, 0x64, 0x69,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x59, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x77, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x65, 0x0a, 0x1b, 0x4d, 0x65,
	0x73, 0x73, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x4d, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x5c, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x65, 0x0a, 0x1b, 0x4d, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x4d, 0x65, 0x73, 0x73, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x60, 0x0a, 0x19, 0x4d, 0x65, 0x73, 0x73, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x50, 0x42, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x19, 0x4d,
	0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x69, 0x0a, 0x1c, 0x4d, 0x65, 0x73, 0x73,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x48, 0x00, 0x52, 0x1c, 0x4d, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x18, 0xfa, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x12,
	0x4d, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x50, 0x42, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x13, 0x4d, 0x65, 0x73,
	0x73, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x4d, 0x65, 0x73,
	0x73, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x54, 0x0a, 0x15,
	0x4d, 0x65, 0x73, 0x73, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x18, 0xaf, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x50,
	0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x15, 0x4d, 0x65, 0x73,
	0x73, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5d, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0xcf,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x4b, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0xd0, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x00, 0x52, 0x12, 0x4d, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x42, 0x11,
	0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x72, 0x72, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x45, 0x72, 0x72, 0x53, 0x74, 0x72, 0x22, 0xcb, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x01, 0x52, 0x03, 0x41, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x06, 0x47,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x50, 0x42,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x02, 0x52,
	0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x43, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08,
	0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x4e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x41, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x69, 0x74, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8c, 0x04, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x72, 0x6f, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x46, 0x72,
	0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x08, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x08, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x49, 0x73, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04,
	0x52, 0x08, 0x49, 0x73, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x88, 0x01, 0x01, 0x12, 0x25,
	0x0a, 0x0b, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x02, 0x48, 0x06, 0x52, 0x0b, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x07, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x54, 0x6f, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x65, 0x78, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x49, 0x73,
	0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x52, 0x4c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x63, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1d, 0x0a, 0x07, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x07, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x22, 0xdc, 0x01, 0x0a, 0x0a,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x0b, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x4c,
	0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x11, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65,
	0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x44, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0xa1, 0x03, 0x0a, 0x12, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x2d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1f, 0x0a, 0x08, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x08, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x08, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b,
	0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x04, 0x52, 0x0b, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x42,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x05, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x54, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x54, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x65, 0x78, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x80,
	0x01, 0x0a, 0x12, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x0d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50,
	0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x4e, 0x65, 0x77, 0x54, 0x65,
	0x78, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4e, 0x65, 0x77, 0x54, 0x65, 0x78,
	0x74, 0x22, 0xb0, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x72, 0x6f, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x46, 0x72,
	0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x6f, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x08, 0x54, 0x6f,
	0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x08, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x54,
	0x6f, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x2a, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x54, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x67, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x06, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xa1, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x43, 0x68, 0x61, 0x74,
	0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x10, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22,
	0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x28, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x63, 0x68, 0x61, 0x74, 0x73, 0x22, 0x81, 0x01, 0x0a,
	0x11, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x49, 0x73,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x49, 0x73, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x76, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x26, 0x0a, 0x0e, 0x49, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x49, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x2f, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x22, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8d,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x44, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x9f,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x42, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x48, 0x01, 0x52, 0x0b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x07, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x73, 0x22, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x42,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x52, 0x0a, 0x13, 0x4e, 0x65, 0x77,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9b, 0x02,
	0x0a, 0x17, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x08, 0x54, 0x6f, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x08, 0x54, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x4e, 0x65, 0x77,
	0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x49, 0x73, 0x45, 0x64, 0x69,
	0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x08, 0x49, 0x73, 0x45,
	0x64, 0x69, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x54, 0x6f, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4e, 0x65, 0x77, 0x54, 0x65, 0x78, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x49, 0x73, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x17,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x08, 0x54, 0x6f, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x08, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x54, 0x6f, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x95, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x66, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x4f, 0x66, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x3d, 0x0a, 0x0f, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x42, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x3c, 0x0a, 0x06, 0x47, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x47, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x61, 0x6c, 0x65, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x03, 0x2a, 0x40, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x02,
	0x12, 0x07, 0x0a, 0x03, 0x47, 0x49, 0x46, 0x10, 0x03, 0x2a, 0x61, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x41, 0x67, 0x65, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x04, 0x2a, 0x2c, 0x0a, 0x14,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x00, 0x2a, 0x28, 0x0a, 0x0c, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x65, 0x64,
	0x65, 0x64, 0x10, 0x00, 0x42, 0x05, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_common_proto_goTypes = []interface{}{
	(Gender)(0),                      // 0: PBCommon.Gender
	(ChatMessageType)(0),             // 1: PBCommon.ChatMessageType
	(UserDataField)(0),               // 2: PBCommon.UserDataField
	(PrivateUserDataField)(0),        // 3: PBCommon.PrivateUserDataField
	(ReturnReason)(0),                // 4: PBCommon.ReturnReason
	(*PBMessage)(nil),                // 5: PBCommon.PBMessage
	(*UserData)(nil),                 // 6: PBCommon.UserData
	(*PrivateUserData)(nil),          // 7: PBCommon.PrivateUserData
	(*ChatMessageData)(nil),          // 8: PBCommon.ChatMessageData
	(*ChatData)(nil),                 // 9: PBCommon.ChatData
	(*UnreadInfo)(nil),               // 10: PBCommon.UnreadInfo
	(*SendChatMessageReq)(nil),       // 11: PBCommon.SendChatMessageReq
	(*EditChatMessageReq)(nil),       // 12: PBCommon.EditChatMessageReq
	(*DeleteChatMessageReq)(nil),     // 13: PBCommon.DeleteChatMessageReq
	(*SubscribeToPushReq)(nil),       // 14: PBCommon.SubscribeToPushReq
	(*GetAllChatMessagesReq)(nil),    // 15: PBCommon.GetAllChatMessagesReq
	(*GetAllChatMessagesAnswer)(nil), // 16: PBCommon.GetAllChatMessagesAnswer
	(*GetChatListReq)(nil),           // 17: PBCommon.GetChatListReq
	(*GetChatListResp)(nil),          // 18: PBCommon.GetChatListResp
	(*AuthenticationReq)(nil),        // 19: PBCommon.AuthenticationReq
	(*AuthenticationAnswer)(nil),     // 20: PBCommon.AuthenticationAnswer
	(*GetUserDataReq)(nil),           // 21: PBCommon.GetUserDataReq
	(*GetUserDataAnswer)(nil),        // 22: PBCommon.GetUserDataAnswer
	(*GetMasterUserDataReq)(nil),     // 23: PBCommon.GetMasterUserDataReq
	(*GetMasterUserDataResp)(nil),    // 24: PBCommon.GetMasterUserDataResp
	(*GetUnreadInfoReq)(nil),         // 25: PBCommon.GetUnreadInfoReq
	(*GetUnreadInfoResp)(nil),        // 26: PBCommon.GetUnreadInfoResp
	(*StandartAnswer)(nil),           // 27: PBCommon.StandartAnswer
	(*NewChatMessageEvent)(nil),      // 28: PBCommon.NewChatMessageEvent
	(*ChatMessageChangedEvent)(nil),  // 29: PBCommon.ChatMessageChangedEvent
	(*ChatMessageDeletedEvent)(nil),  // 30: PBCommon.ChatMessageDeletedEvent
	(*ReturnedMessageEvent)(nil),     // 31: PBCommon.ReturnedMessageEvent
}
var file_common_proto_depIdxs = []int32{
	19, // 0: PBCommon.PBMessage.MessAuthReq:type_name -> PBCommon.AuthenticationReq
	20, // 1: PBCommon.PBMessage.MessAuthAnswer:type_name -> PBCommon.AuthenticationAnswer
	21, // 2: PBCommon.PBMessage.MessGetUserDataReq:type_name -> PBCommon.GetUserDataReq
	22, // 3: PBCommon.PBMessage.MessGetUserDataAnswer:type_name -> PBCommon.GetUserDataAnswer
	23, // 4: PBCommon.PBMessage.MessGetMasterUserDataReq:type_name -> PBCommon.GetMasterUserDataReq
	24, // 5: PBCommon.PBMessage.MessGetMasterUserDataResp:type_name -> PBCommon.GetMasterUserDataResp
	11, // 6: PBCommon.PBMessage.MessSendChatMessageReq:type_name -> PBCommon.SendChatMessageReq
	12, // 7: PBCommon.PBMessage.MessEditChatMessageReq:type_name -> PBCommon.EditChatMessageReq
	28, // 8: PBCommon.PBMessage.MessNewChatMessageEvent:type_name -> PBCommon.NewChatMessageEvent
	29, // 9: PBCommon.PBMessage.MessChatMessageChangedEvent:type_name -> PBCommon.ChatMessageChangedEvent
	13, // 10: PBCommon.PBMessage.MessDeleteChatMessageReq:type_name -> PBCommon.DeleteChatMessageReq
	30, // 11: PBCommon.PBMessage.MessChatMessageDeletedEvent:type_name -> PBCommon.ChatMessageDeletedEvent
	15, // 12: PBCommon.PBMessage.MessGetAllChatMessagesReq:type_name -> PBCommon.GetAllChatMessagesReq
	16, // 13: PBCommon.PBMessage.MessGetAllChatMessagesAnswer:type_name -> PBCommon.GetAllChatMessagesAnswer
	14, // 14: PBCommon.PBMessage.MessSubscribeToPushReq:type_name -> PBCommon.SubscribeToPushReq
	17, // 15: PBCommon.PBMessage.MessGetChatListReq:type_name -> PBCommon.GetChatListReq
	18, // 16: PBCommon.PBMessage.MessGetChatListResp:type_name -> PBCommon.GetChatListResp
	25, // 17: PBCommon.PBMessage.MessGetUnreadInfoReq:type_name -> PBCommon.GetUnreadInfoReq
	26, // 18: PBCommon.PBMessage.MessGetUnreadInfoResp:type_name -> PBCommon.GetUnreadInfoResp
	31, // 19: PBCommon.PBMessage.MessReturnedMessageEvent:type_name -> PBCommon.ReturnedMessageEvent
	27, // 20: PBCommon.PBMessage.MessStandartAnswer:type_name -> PBCommon.StandartAnswer
	0,  // 21: PBCommon.UserData.Gender:type_name -> PBCommon.Gender
	1,  // 22: PBCommon.ChatMessageData.Type:type_name -> PBCommon.ChatMessageType
	8,  // 23: PBCommon.ChatMessageData.RepliedMessage:type_name -> PBCommon.ChatMessageData
	1,  // 24: PBCommon.SendChatMessageReq.Type:type_name -> PBCommon.ChatMessageType
	8,  // 25: PBCommon.SendChatMessageReq.RepliedMessage:type_name -> PBCommon.ChatMessageData
	8,  // 26: PBCommon.EditChatMessageReq.OriginMessage:type_name -> PBCommon.ChatMessageData
	8,  // 27: PBCommon.GetAllChatMessagesAnswer.messages:type_name -> PBCommon.ChatMessageData
	9,  // 28: PBCommon.GetChatListResp.chats:type_name -> PBCommon.ChatData
	2,  // 29: PBCommon.GetUserDataReq.Fields:type_name -> PBCommon.UserDataField
	6,  // 30: PBCommon.GetUserDataAnswer.Data:type_name -> PBCommon.UserData
	2,  // 31: PBCommon.GetMasterUserDataReq.Fields:type_name -> PBCommon.UserDataField
	3,  // 32: PBCommon.GetMasterUserDataReq.PrivateFields:type_name -> PBCommon.PrivateUserDataField
	6,  // 33: PBCommon.GetMasterUserDataResp.Data:type_name -> PBCommon.UserData
	7,  // 34: PBCommon.GetMasterUserDataResp.PrivateData:type_name -> PBCommon.PrivateUserData
	10, // 35: PBCommon.GetUnreadInfoResp.Info:type_name -> PBCommon.UnreadInfo
	8,  // 36: PBCommon.NewChatMessageEvent.chatMessage:type_name -> PBCommon.ChatMessageData
	1,  // 37: PBCommon.ChatMessageChangedEvent.Type:type_name -> PBCommon.ChatMessageType
	4,  // 38: PBCommon.ReturnedMessageEvent.ReasonOfReturn:type_name -> PBCommon.ReturnReason
	5,  // 39: PBCommon.ReturnedMessageEvent.ReturnedMessage:type_name -> PBCommon.PBMessage
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnreadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditChatMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToPushReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllChatMessagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllChatMessagesAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDataAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMasterUserDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMasterUserDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnreadInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnreadInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandartAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewChatMessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageChangedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageDeletedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnedMessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_common_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PBMessage_MessAuthReq)(nil),
		(*PBMessage_MessAuthAnswer)(nil),
		(*PBMessage_MessGetUserDataReq)(nil),
		(*PBMessage_MessGetUserDataAnswer)(nil),
		(*PBMessage_MessGetMasterUserDataReq)(nil),
		(*PBMessage_MessGetMasterUserDataResp)(nil),
		(*PBMessage_MessSendChatMessageReq)(nil),
		(*PBMessage_MessEditChatMessageReq)(nil),
		(*PBMessage_MessNewChatMessageEvent)(nil),
		(*PBMessage_MessChatMessageChangedEvent)(nil),
		(*PBMessage_MessDeleteChatMessageReq)(nil),
		(*PBMessage_MessChatMessageDeletedEvent)(nil),
		(*PBMessage_MessGetAllChatMessagesReq)(nil),
		(*PBMessage_MessGetAllChatMessagesAnswer)(nil),
		(*PBMessage_MessSubscribeToPushReq)(nil),
		(*PBMessage_MessGetChatListReq)(nil),
		(*PBMessage_MessGetChatListResp)(nil),
		(*PBMessage_MessGetUnreadInfoReq)(nil),
		(*PBMessage_MessGetUnreadInfoResp)(nil),
		(*PBMessage_MessReturnedMessageEvent)(nil),
		(*PBMessage_MessStandartAnswer)(nil),
	}
	file_common_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_common_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_common_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_common_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_common_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_common_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_common_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_common_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_common_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_common_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_common_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_common_proto_msgTypes[25].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
